# import cv2
# import numpy as np
# from matplotlib import pyplot as plt

# # --- ุงูุฎุทูุฉ 0: ุชุญููู ุงูุตูุฑุฉ ---
# # ูุฑุงุกุฉ ุงูุตูุฑุฉ ุงูุชู ุชุญุชูู ุนูู ูุงุฆูุงุช ูุชูุงูุณุฉ
# img = cv2.imread('water_coins.png')
# # ุชุญููููุง ุฅูู ุชุฏุฑุฌ ุฑูุงุฏู ููุชุญููู
# gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)


# # --- ุงูุฎุทูุฉ 1: ุงููุนุงูุฌุฉ ุงูุฃูููุฉ ููุญุตูู ุนูู ุตูุฑุฉ ุซูุงุฆูุฉ ---
# # ุชุทุจูู Otsu's Threshold ูุนุฒู ุงููุทุน ุงูููุฏูุฉ ุนู ุงูุฎูููุฉ
# ret, thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)
# # thresh ุงูุขู ุตูุฑุฉ ุณูุฏุงุก ูุจูุถุงุกุ ุญูุซ ุงููุทุน ุงูููุฏูุฉ ุจูุถุงุก


# # --- ุงูุฎุทูุฉ 2: ุชุญุฏูุฏ ุงูุฎูููุฉ ุงููุคูุฏุฉ (sure background) ---
# # ุฅุฒุงูุฉ ุฃู ุถูุถุงุก ุตุบูุฑุฉ ุจุงุณุชุฎุฏุงู Opening
# kernel = np.ones((3,3), np.uint8)
# opening = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, kernel, iterations=2)
# # ุชูุณูุน (dilate) ูุณุงุญุฉ ุงููุงุฆูุงุช ููุฌุฏ ุงูููุทูุฉ ุงูุชู ูู ุจุงูุชุฃููุฏ ุฎูููุฉ
# sure_bg = cv2.dilate(opening, kernel, iterations=3)


# # --- ุงูุฎุทูุฉ 3: ุชุญุฏูุฏ ุงููุงุฆู ุงููุคูุฏ (sure foreground) ---
# # ุชุญููู ุงููุณุงูุฉ ูุนุทููุง ููู ุฃุนูู ูู ูุฑุงูุฒ ุงููุงุฆูุงุช
# dist_transform = cv2.distanceTransform(opening, cv2.DIST_L2, 5)
# # ุจุฃุฎุฐ 70% ูู ุฃูุตู ูููุฉ ูุณุงูุฉุ ูุญุตู ุนูู ููู ุงููุงุฆูุงุช
# ret, sure_fg = cv2.threshold(dist_transform, 0.7 * dist_transform.max(), 255, 0)
# sure_fg = np.uint8(sure_fg) # ุชุญููููุง ุฅูู ููุน ุจูุงูุงุช ููุงุณุจ


# # --- ุงูุฎุทูุฉ 4: ุชุญุฏูุฏ ุงูููุทูุฉ ุงููุฌูููุฉ (unknown region) ---
# # ูู ุงูููุทูุฉ ุจูู ุงูุฎูููุฉ ุงููุคูุฏุฉ ูุงููุงุฆู ุงููุคูุฏ
# unknown = cv2.subtract(sure_bg, sure_fg)


# # --- ุงูุฎุทูุฉ 5: ุฅูุดุงุก ุงูุนูุงูุงุช (Markers) ูุชุทุจูู Watershed ---
# # ุฅุนุทุงุก ุฃุฑูุงู ูุฑูุฏุฉ ููู ููุงุฉ ูุงุฆู (1, 2, 3...)
# ret, markers = cv2.connectedComponents(sure_fg)
# # ุฅุถุงูุฉ 1 ูุฌููุน ุงูุนูุงูุงุช ุญุชู ุชููู ุงูุฎูููุฉ ุงููุคูุฏุฉ 1 ุจุฏูุงู ูู 0
# markers = markers + 1
# # ุงูุขูุ ูุฌุนู ุงูููุทูุฉ ุงููุฌูููุฉ 0 (ูุฐู ูู ุงูููุทูุฉ ุงูุชู ูุฌุจ ุนูู ุงูุฎูุงุฑุฒููุฉ ุชุญุฏูุฏูุง)
# markers[unknown == 255] = 0

# # ุชุทุจูู ุฎูุงุฑุฒููุฉ Watershed
# # ุณุชุชุนุงูู ุงูุฎูุงุฑุฒููุฉ ูุน ุงูููุทูุฉ 0 ูุชุฑุณู ุญุฏูุฏ (ูููุชูุง -1)
# cv2.watershed(img, markers)

# # ุชูููู ุงูุญุฏูุฏ ุจุงูููู ุงูุฃุญูุฑ ุนูู ุงูุตูุฑุฉ ุงูุฃุตููุฉ
# img[markers == -1] = [255, 0, 0]


# # --- ุนุฑุถ ุงููุชุงุฆุฌ ---
# plt.figure(figsize=(12, 8))

# plt.subplot(1, 2, 1)
# plt.imshow(cv2.cvtColor(cv2.imread('water_coins.png'), cv2.COLOR_BGR2RGB))
# plt.title('ุงูุตูุฑุฉ ุงูุฃุตููุฉ')
# plt.axis('off')

# plt.subplot(1, 2, 2)
# plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
# plt.title('ุงูุตูุฑุฉ ุจุนุฏ ุงูุชุฌุฒุฆุฉ')
# plt.axis('off')

# plt.show()

import tkinter as tk
from tkinter import filedialog, ttk
import cv2
import numpy as np
from matplotlib import pyplot as plt

# --- ุชู ูุถุน ูู ููุทู ุงููุนุงูุฌุฉ ุฏุงุฎู ูุฐู ุงูุฏุงูุฉ ---
# def process_and_display_image(image_path):
#     """
#     ุชููู ูุฐู ุงูุฏุงูุฉ ุจุชุญููู ุงูุตูุฑุฉ ูู ุงููุณุงุฑ ุงููุญุฏุฏุ
#     ูุชุทุจู ุฎูุงุฑุฒููุฉ Watershed ุนูููุงุ ุซู ุชุนุฑุถ ุงููุชุงุฆุฌ.
#     """
#     # --- ุงูุฎุทูุฉ 0: ุชุญููู ุงูุตูุฑุฉ ---
#     # ูุฑุงุกุฉ ุงูุตูุฑุฉ ุงูุฃุตููุฉ ููุญูุงุธ ุนูููุง ููุนุฑุถ ูุงุญููุง
#     original_image = cv2.imread(image_path)
#     # ุฅูุดุงุก ูุณุฎุฉ ูู ุงูุตูุฑุฉ ูุชุทุจูู ุงูุชุนุฏููุงุช ุนูููุง
#     img = original_image.copy()
    
#     # ุงูุชุฃูุฏ ูู ุฃู ุงูุตูุฑุฉ ุชู ุชุญููููุง ุจูุฌุงุญ
#     if img is None:
#         print(f"ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุตูุฑุฉ ูู ุงููุณุงุฑ: {image_path}")
#         return

#     # ุชุญููููุง ุฅูู ุชุฏุฑุฌ ุฑูุงุฏู ููุชุญููู
#     gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

#     # --- ุงูุฎุทูุฉ 1: ุงููุนุงูุฌุฉ ุงูุฃูููุฉ ููุญุตูู ุนูู ุตูุฑุฉ ุซูุงุฆูุฉ ---
#     ret, thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

#     # --- ุงูุฎุทูุฉ 2: ุชุญุฏูุฏ ุงูุฎูููุฉ ุงููุคูุฏุฉ (sure background) ---
#     kernel = np.ones((3,3), np.uint8)
#     opening = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, kernel, iterations=2)
#     sure_bg = cv2.dilate(opening, kernel, iterations=3)

#     # --- ุงูุฎุทูุฉ 3: ุชุญุฏูุฏ ุงููุงุฆู ุงููุคูุฏ (sure foreground) ---
#     dist_transform = cv2.distanceTransform(opening, cv2.DIST_L2, 5)
#     ret, sure_fg = cv2.threshold(dist_transform, 0.7 * dist_transform.max(), 255, 0)
#     sure_fg = np.uint8(sure_fg)

#     # --- ุงูุฎุทูุฉ 4: ุชุญุฏูุฏ ุงูููุทูุฉ ุงููุฌูููุฉ (unknown region) ---
#     unknown = cv2.subtract(sure_bg, sure_fg)

#     # --- ุงูุฎุทูุฉ 5: ุฅูุดุงุก ุงูุนูุงูุงุช (Markers) ูุชุทุจูู Watershed ---
#     ret, markers = cv2.connectedComponents(sure_fg)
#     markers = markers + 1
#     markers[unknown == 255] = 0
#     cv2.watershed(img, markers)

#     # ุชูููู ุงูุญุฏูุฏ ุจุงูููู ุงูุฃุญูุฑ ุนูู ุงูุตูุฑุฉ ุงูุฃุตููุฉ
#     img[markers == -1] = [255, 0, 0]

#     # --- ุนุฑุถ ุงููุชุงุฆุฌ ---
#     plt.figure(figsize=(12, 8))

#     plt.subplot(1, 2, 1)
#     # ุงุณุชุฎุฏุงู ุงููุณุฎุฉ ุงูุฃุตููุฉ ุงููุธููุฉ ููุนุฑุถ
#     plt.imshow(cv2.cvtColor(original_image, cv2.COLOR_BGR2RGB))
#     plt.title('ุงูุตูุฑุฉ ุงูุฃุตููุฉ')
#     plt.axis('off')

#     plt.subplot(1, 2, 2)
#     # ุงุณุชุฎุฏุงู ุงููุณุฎุฉ ุงููุนุฏูุฉ ููุนุฑุถ
#     plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
#     plt.title('ุงูุตูุฑุฉ ุจุนุฏ ุงูุชุฌุฒุฆุฉ')
#     plt.axis('off')

#     plt.show()

# # --- ุฏุงูุฉ ุฎุงุตุฉ ุจุฒุฑ ุงูุฑูุน ---
# def upload_action():
#     """
#     ุชูุชุญ ูุงูุฐุฉ ูุงุฎุชูุงุฑ ููู ุซู ุชุณุชุฏุนู ุฏุงูุฉ ุงููุนุงูุฌุฉ.
#     """
#     # ูุชุญ ูุงูุฐุฉ ุงุฎุชูุงุฑ ุงููููุงุช ูุชุญุฏูุฏ ุงูุฃููุงุน ุงููุณููุญ ุจูุง
#     file_path = filedialog.askopenfilename(filetypes=[("Image files", "*.jpg *.jpeg *.png *.bmp")])
#     # ุฅุฐุง ุงุฎุชุงุฑ ุงููุณุชุฎุฏู ููููุง ุจุงููุนู
#     if file_path:
#         process_and_display_image(file_path)

# # --- ุฅุนุฏุงุฏ ุงููุงุฌูุฉ ุงูุฑุณูููุฉ ุงูุฑุฆูุณูุฉ ---
# root = tk.Tk()
# root.title("ุฃุฏุงุฉ ุชุฌุฒุฆุฉ ุงูุตูุฑ (Watershed)")
# root.geometry("400x150")

# # ุฅุนุฏุงุฏ ุชุตููู ุจุณูุท ูููุงุฌูุฉ
# style = ttk.Style()
# style.configure("TButton", font=("Helvetica", 12, "bold"), padding=10)

# # ุฅูุดุงุก ุฅุทุงุฑ ุฑุฆูุณู ูุชูุณูุท ุงูุฒุฑ
# main_frame = ttk.Frame(root, padding=20)
# main_frame.pack(expand=True, fill=tk.BOTH)

# # ุฅูุดุงุก ุฒุฑ ุงูุฑูุน ูุฑุจุทู ุจุฏุงูุฉ upload_action
# upload_button = ttk.Button(main_frame, text="๐ ุงุฑูุน ุตูุฑุฉ ููุนุงูุฌุชูุง", command=upload_action)
# upload_button.pack(expand=True)

# # ุชุดุบูู ุงููุงุฌูุฉ ุงูุฑุณูููุฉ
# root.mainloop()


import cv2
import numpy as np
from matplotlib import pyplot as plt

# --- ุงูุฎุทูุฉ 0: ุชุญููู ุงูุตูุฑุฉ ---
# ูุฑุงุกุฉ ุงูุตูุฑุฉ ุงูุชู ุชุญุชูู ุนูู ูุงุฆูุงุช ูุชูุงูุณุฉ
# ุชุฃูุฏ ูู ูุฌูุฏ ุตูุฑุฉ ุจุงุณู 'coins.png' ูู ููุณ ุงููุฌูุฏ
original_image = cv2.imread('water_coins.png')
img = original_image.copy() # ูุฃุฎุฐ ูุณุฎุฉ ููุนูู ุนูููุง

# ุงูุชุฃูุฏ ูู ุชุญููู ุงูุตูุฑุฉ ุจูุฌุงุญ
if img is None:
    print("ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู ููู ุงูุตูุฑุฉ 'coins.png'. ุชุฃูุฏ ูู ูุฌูุฏู ูู ููุณ ุงููุฌูุฏ.")
else:
    # ุชุญููููุง ุฅูู ุชุฏุฑุฌ ุฑูุงุฏู ููุชุญููู
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # --- ุงูุฎุทูุฉ 1: ุงููุนุงูุฌุฉ ุงูุฃูููุฉ ููุญุตูู ุนูู ุตูุฑุฉ ุซูุงุฆูุฉ ---
    # ุชุทุจูู Otsu's Threshold ูุนุฒู ุงููุทุน ุงูููุฏูุฉ ุนู ุงูุฎูููุฉ
    ret, thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

    # --- ุงูุฎุทูุฉ 2: ุชุญุฏูุฏ ุงูุฎูููุฉ ุงููุคูุฏุฉ (sure background) ---
    # ุฅุฒุงูุฉ ุฃู ุถูุถุงุก ุตุบูุฑุฉ ุจุงุณุชุฎุฏุงู Opening
    kernel = np.ones((3,3), np.uint8)
    opening = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, kernel, iterations=2)
    # ุชูุณูุน (dilate) ูุณุงุญุฉ ุงููุงุฆูุงุช ููุฌุฏ ุงูููุทูุฉ ุงูุชู ูู ุจุงูุชุฃููุฏ ุฎูููุฉ
    sure_bg = cv2.dilate(opening, kernel, iterations=3)

    # --- ุงูุฎุทูุฉ 3: ุชุญุฏูุฏ ุงููุงุฆู ุงููุคูุฏ (sure foreground) ---
    # ุชุญููู ุงููุณุงูุฉ ูุนุทููุง ููู ุฃุนูู ูู ูุฑุงูุฒ ุงููุงุฆูุงุช
    dist_transform = cv2.distanceTransform(opening, cv2.DIST_L2, 5)
    # ุจุฃุฎุฐ 70% ูู ุฃูุตู ูููุฉ ูุณุงูุฉุ ูุญุตู ุนูู ููู ุงููุงุฆูุงุช
    ret, sure_fg = cv2.threshold(dist_transform, 0.7 * dist_transform.max(), 255, 0)
    sure_fg = np.uint8(sure_fg) # ุชุญููููุง ุฅูู ููุน ุจูุงูุงุช ููุงุณุจ

    # --- ุงูุฎุทูุฉ 4: ุชุญุฏูุฏ ุงูููุทูุฉ ุงููุฌูููุฉ (unknown region) ---
    # ูู ุงูููุทูุฉ ุจูู ุงูุฎูููุฉ ุงููุคูุฏุฉ ูุงููุงุฆู ุงููุคูุฏ
    unknown = cv2.subtract(sure_bg, sure_fg)

    # --- ุงูุฎุทูุฉ 5: ุฅูุดุงุก ุงูุนูุงูุงุช (Markers) ูุชุทุจูู Watershed ---
    # ุฅุนุทุงุก ุฃุฑูุงู ูุฑูุฏุฉ ููู ููุงุฉ ูุงุฆู (1, 2, 3...)
    ret, markers = cv2.connectedComponents(sure_fg)
    # ุฅุถุงูุฉ 1 ูุฌููุน ุงูุนูุงูุงุช ุญุชู ุชููู ุงูุฎูููุฉ ุงููุคูุฏุฉ 1 ุจุฏูุงู ูู 0
    markers = markers + 1
    # ุงูุขูุ ูุฌุนู ุงูููุทูุฉ ุงููุฌูููุฉ 0
    markers[unknown == 255] = 0

    # ุชุทุจูู ุฎูุงุฑุฒููุฉ Watershed
    cv2.watershed(img, markers)

    # ุชูููู ุงูุญุฏูุฏ ุจุงูููู ุงูุฃุญูุฑ ุนูู ุงูุตูุฑุฉ
    img[markers == -1] = [255, 0, 0]

    # --- ุนุฑุถ ุงููุชุงุฆุฌ ---
    plt.figure(figsize=(12, 8))

    plt.subplot(1, 2, 1)
    plt.imshow(cv2.cvtColor(original_image, cv2.COLOR_BGR2RGB))
    plt.title('ุงูุตูุฑุฉ ุงูุฃุตููุฉ')
    plt.axis('off')

    plt.subplot(1, 2, 2)
    plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
    plt.title('ุงูุตูุฑุฉ ุจุนุฏ ุงูุชุฌุฒุฆุฉ')
    plt.axis('off')

    plt.show()